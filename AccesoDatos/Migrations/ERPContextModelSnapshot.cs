// <auto-generated />
using System;
using ERP.AccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP.AccesoDatos.Migrations
{
    [DbContext(typeof(ERPContext))]
    partial class ERPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP.Entidades.CentroOperacion", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("CompaniaId")
                        .HasColumnType("int");

                    b.Property<int>("ContactoRowid")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("IndEstado")
                        .HasColumnType("int");

                    b.Property<string>("RegionalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.HasIndex("ContactoRowid")
                        .IsUnique();

                    b.HasIndex("RegionalId");

                    b.ToTable("CentrosOperacion");
                });

            modelBuilder.Entity("ERP.Entidades.Compania", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Companias");
                });

            modelBuilder.Entity("ERP.Entidades.Contacto", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompaniaId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RowId");

                    b.HasIndex("CompaniaId");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("ERP.Entidades.Regional", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("CompaniaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("IndEstado")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("Regionales");
                });

            modelBuilder.Entity("ERP.Entidades.CentroOperacion", b =>
                {
                    b.HasOne("ERP.Entidades.Compania", "Compania")
                        .WithMany("CentrosOperacion")
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Entidades.Contacto", "Contacto")
                        .WithOne("CentroOperacion")
                        .HasForeignKey("ERP.Entidades.CentroOperacion", "ContactoRowid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERP.Entidades.Regional", "Regional")
                        .WithMany("CentrosOperacion")
                        .HasForeignKey("RegionalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Compania");

                    b.Navigation("Contacto");

                    b.Navigation("Regional");
                });

            modelBuilder.Entity("ERP.Entidades.Contacto", b =>
                {
                    b.HasOne("ERP.Entidades.Compania", "Compania")
                        .WithMany("Contactos")
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("ERP.Entidades.Regional", b =>
                {
                    b.HasOne("ERP.Entidades.Compania", "Compania")
                        .WithMany("Regionales")
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("ERP.Entidades.Compania", b =>
                {
                    b.Navigation("CentrosOperacion");

                    b.Navigation("Contactos");

                    b.Navigation("Regionales");
                });

            modelBuilder.Entity("ERP.Entidades.Contacto", b =>
                {
                    b.Navigation("CentroOperacion");
                });

            modelBuilder.Entity("ERP.Entidades.Regional", b =>
                {
                    b.Navigation("CentrosOperacion");
                });
#pragma warning restore 612, 618
        }
    }
}
